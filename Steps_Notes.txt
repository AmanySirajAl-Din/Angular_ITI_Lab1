- Install Angular
    >>npm install -g @angular/cli
    >>ng new my-app

- Install Bootstrap: 
    >>npm install bootstrap

- Inject Bootstrap in "angular.json" file
	- "styles": "./node_modules/bootstrap/dist/css/bootstrap.min.css"
	- "scripts: "./node_modules/bootstrap/dist/js/bootstrap.bundle.min.js"

- Install FontAwesome
    >>npm i @fortawesome/fontawesome-free

- Inject FontAwesome in "angular.json" file
	- "styles": "./node_modules/@fortawesome/fontawesome-free/css/all.css"

- Run Angular server:
    >>ng serve -o

- Components:
============================
    NOTE: The start point of Angular app is the "app component"
    - Genetating Component: 
        >>ng genetate component <componentName> 
        Or
        >>ng g c <componentName> 
        (Folder will be added to app folder
        includs 4 files [html, css, ts, spec.ts])


        /*== Other Flags ==*/
        >>ng generate component --help  
        (for commands can be used)

        >>ng genetate component <componentName> --dryRun (-d)
        NOTE: The "dryRun" flag means no changes were made.

        >>ng genetate component <componentName> --flat
        (4 files [html, css, ts, spec.ts] in app folder with no folder)

        >>ng genetate component <componentName> --skip-tests
        (Folder will be added to app folder
        includs 4 files [html, css, ts])
        No spec.ts file for test 

    - Delete Component:
        - Open the angular app in your favorite code editor.
        - Navigate to the component folder and delete it.
        - Open your app. module. ts file and follow the below steps.
            - Remove the component import statement.
            - Remove the component declaration from the @Ngmodule declarations array.

    NOTE: Component is a class fires from its constructor
    NOTE: Component have lifecycle methods (to check its state):
        - ngOnInit() -> initialize it
        - ngDoCheck()
        - ngOnDestroy()
        - ngAfterViewInit() -> runs after initialization
        /** Check the lec.pdf **/

- Data Binding:
============================
    1- String interpolation:
        **To send data from .ts to .html**
        ex.
            * Initialize var in .ts => name: string = "Amany"
            * Call var in .html => {{name}}
    
    2- Property Binding:
        **To make dynamic Property**
        **To send data from .html to .ts**
        ex.
           imgSrcVar: string = "img/image1.png"
           <img [src]="imgSrcVar">

           isDisabledVar: boolean = false
           <button [disabled]="isDisabledVar"
    
    3- Event Binding:
        **To bind Events**
        ex.
            clickMeFun(){...}
            <button (click)="clickMeFun()"

            changeFun(evt){...}
            <input (keyup)="changeFun($event)">

    4- NgModule: (2 way Binding )
        ** bind 1 + 2 + 3 **
        [(ngModule)]="nameVar"
        must import formsModule inside app module > imports:
        [()] => banana end box

- Directives:
============================
    Instructions to the DOM .. like =>
    - if, else
    - interpolation
    - change style base on condition

    Its Types:
        - Component Directives
        - Structural Directives
        - Attribute Directives
    /** Check the lec.pdf **/
